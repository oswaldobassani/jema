#############################################################################
# Makefile for building: libocvcalib.so.1.0.0
# Generated by qmake (1.07a) (Qt 3.3.8b) on: Sun Aug 23 11:16:39 2009
# Project:  OCVCalib.pro
# Template: lib
# Command: $(QMAKE) -o Makefile OCVCalib.pro
#############################################################################

JAVA_HOME= /usr/lib/jvm/java-6-sun-1.6.0.14

# CV_SOURCE= /usr/include/opencv/
# CV_SOURCE= /home/hugo/documents/downloads/libs/opencv-0.9.6/cv/src
CV_SOURCE= /home/bassani/Aplicativos/opencv-1.0.0/cv/src
# CV_SOURCE= /home/bassani/Aplicativos/opencv-0.9.6/cv/src

####### Compiler, tools and options

CC       = gcc
CXX      = g++
LEX      = flex
YACC     = yacc
CFLAGS   = -pipe -g -Wall -W -O2 -D_REENTRANT -fPIC  -DQT_NO_DEBUG -DQT_THREAD_SUPPORT -DQT_SHARED -DQT_TABLET_SUPPORT
CXXFLAGS = -pipe -g -Wall -W -O2 -D_REENTRANT -fPIC  -DQT_NO_DEBUG -DQT_THREAD_SUPPORT -DQT_SHARED -DQT_TABLET_SUPPORT
LEXFLAGS = 
YACCFLAGS= -d

INCPATH  = -I/usr/share/qt3/mkspecs/default -I. -I. -I$(JAVA_HOME)/include/ -I$(JAVA_HOME)/include/linux/ -I/usr/include/qt3 -I$(CV_SOURCE) -I/usr/include/opencv

LINK     = g++
LFLAGS   = -shared -Wl,-soname,libocvcalib.so.1
LIBS     = $(SUBLIBS) -L/usr/share/qt3/lib -lcv -lcvaux -lcxcore -lqt-mt -lpthread
AR       = ar cqs
RANLIB   = 
MOC      = /usr/share/qt3/bin/moc
UIC      = /usr/share/qt3/bin/uic
QMAKE    = qmake
TAR      = tar -cf
GZIP     = gzip -9f
COPY     = cp -f
COPY_FILE= $(COPY)
COPY_DIR = $(COPY) -r
INSTALL_FILE= $(COPY_FILE)
INSTALL_DIR = $(COPY_DIR)
DEL_FILE = rm -f
SYMLINK  = ln -sf
DEL_DIR  = rmdir
MOVE     = mv -f
CHK_DIR_EXISTS= test -d
MKDIR    = mkdir -p

####### Output directory

OBJECTS_DIR = build/

####### Files

HEADERS = ImageConverter.h \
		itesm_gvision_apps_calibrator_CalibratorOCV.h
SOURCES = ImageConverter.cpp \
		ocvcalibrator.cpp \
		cvcalibration.cpp
OBJECTS = build/ImageConverter.o \
		build/ocvcalibrator.o \
		build/cvcalibration.o
FORMS = 
UICDECLS = 
UICIMPLS = 
SRCMOC   = 
OBJMOC = 
DIST	   = OCVCalib.pro
QMAKE_TARGET = ocvcalib
DESTDIR  = build/
TARGET   = libocvcalib.so.1.0.0
TARGETA	= build/libocvcalib.a
TARGETD	= libocvcalib.so.1.0.0
TARGET0	= libocvcalib.so
TARGET1	= libocvcalib.so.1
TARGET2	= libocvcalib.so.1.0

first: all
####### Implicit rules

.SUFFIXES: .c .o .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

all: Makefile  build/$(TARGET)

build/$(TARGET):  $(UICDECLS) $(OBJECTS) $(OBJMOC) $(SUBLIBS) $(OBJCOMP)  
	test -d build/ || mkdir -p build/
	-$(DEL_FILE) $(TARGET) $(TARGET0) $(TARGET1) $(TARGET2)
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJMOC) $(LIBS) $(OBJCOMP)
	-ln -s $(TARGET) $(TARGET0)
	-ln -s $(TARGET) $(TARGET1)
	-ln -s $(TARGET) $(TARGET2)
	-$(DEL_FILE) build/$(TARGET)
	-$(DEL_FILE) build/$(TARGET0)
	-$(DEL_FILE) build/$(TARGET1)
	-$(DEL_FILE) build/$(TARGET2)
	-$(MOVE) $(TARGET) $(TARGET0) $(TARGET1) $(TARGET2) build/



staticlib: $(TARGETA)

$(TARGETA):  $(UICDECLS) $(OBJECTS) $(OBJMOC) $(OBJCOMP)
	-$(DEL_FILE) $(TARGETA) 
	$(AR) $(TARGETA) $(OBJECTS) $(OBJMOC)

mocables: $(SRCMOC)
uicables: $(UICDECLS) $(UICIMPLS)

$(MOC): 
	( cd $(QTDIR)/src/moc && $(MAKE) )

Makefile: OCVCalib.pro  /usr/share/qt3/mkspecs/default/qmake.conf /usr/share/qt3/lib/libqt-mt.prl
	$(QMAKE) -o Makefile OCVCalib.pro
qmake: 
	@$(QMAKE) -o Makefile OCVCalib.pro

dist: 
	@mkdir -p build/ocvcalib && $(COPY_FILE) --parents $(SOURCES) $(HEADERS) $(FORMS) $(DIST) build/ocvcalib/ && ( cd `dirname build/ocvcalib` && $(TAR) ocvcalib.tar ocvcalib && $(GZIP) ocvcalib.tar ) && $(MOVE) `dirname build/ocvcalib`/ocvcalib.tar.gz . && $(DEL_FILE) -r build/ocvcalib

mocclean:

uiclean:

yaccclean:
lexclean:
clean:
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) build/$(TARGET) $(TARGET)
	-$(DEL_FILE) build/$(TARGET0) build/$(TARGET1) build/$(TARGET2) $(TARGETA)


FORCE:

####### Compile

build/ImageConverter.o: ImageConverter.cpp ImageConverter.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/ImageConverter.o ImageConverter.cpp

build/ocvcalibrator.o: ocvcalibrator.cpp itesm_gvision_apps_calibrator_CalibratorOCV.h \
		ImageConverter.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/ocvcalibrator.o ocvcalibrator.cpp

build/cvcalibration.o: cvcalibration.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/cvcalibration.o cvcalibration.cpp

####### Install

install:  

uninstall:  

